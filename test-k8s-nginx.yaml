
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
    version: v1
  name: nginx

spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  #type: ClusterIP
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
    version: v1
  annotations:    
    yamlfile.huisebug.io/yamlfile: /etc/kubernetes/nginx/test-k8s-nginx.yaml
  name: nginxredis

spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      version: v1
  template:
    metadata:
      labels:
        app: nginx
        version: v1
    spec:
      initContainers:
      - name: genhtml
        image: nginx
        command:
        - bash 
        - -c 
        args:
        - 'mkdir -p /tmp && touch /tmp/index.html && hostname > /tmp/index.html'
        volumeMounts:
        - name: html
          mountPath: "/tmp"
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 5m
            memory: "256Mi"
          limits:
            cpu: 30m
            memory: "512Mi"
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html  
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      - image: redis
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: html
        emptyDir: {}
---              



apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
    version: v1
  annotations:   
    yamlfile.huisebug.io/yamlfile: /etc/kubernetes/nginx/test-k8s-nginx.yaml
  name: nginxredis
  namespace: kube-system

spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      app: nginx
      version: v1
  template:
    metadata:
      labels:
        app: nginx
        version: v1
    spec:
      initContainers:
      - name: genhtml
        image: nginx
        command:
        - bash 
        - -c 
        args:
        - 'mkdir -p /tmp && touch /tmp/index.html && hostname > /tmp/index.html'
        volumeMounts:
        - name: html
          mountPath: "/tmp"
      containers:
      - image: nginx
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 5m
            memory: "256Mi"
          limits:
            cpu: 30m
            memory: "512Mi"
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html  
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      - image: redis
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: html
        emptyDir: {}
---              